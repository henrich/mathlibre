%!PS-Adobe-3.0 EPSF-3.0
%%Creator: xpdf/pdftops 3.01
%%LanguageLevel: 2
%%BoundingBox: 0 0 504 216
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.01 0
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add axialCol sc
    exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
    0 360 arc h
    dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
    0 360 arc h f*
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font T3_14_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-184 -236 1288 929] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 6 dict def
CharProcs begin
/period {
318 0 107 0 210 124 setcachedevice
q
107 0 103 124 re
f
Q
} def
/hyphen {
361 0 49 234 312 314 setcachedevice
q
49 234 263 80 re
f
Q
} def
/two {
636 0 73 0 536 742 setcachedevice
q
192 83 m
536 83 l
536 0 l
73 0 l
73 83 l
110 121 161 173 226 239 c
290 304 331 346 348 365 c
380 400 402 430 414 455 c
426 479 433 504 433 528 c
433 566 419 598 392 622 c
365 646 330 659 286 659 c
255 659 222 653 188 643 c
154 632 117 616 78 594 c
78 694 l
118 710 155 722 189 730 c
223 738 255 742 284 742 c
359 742 419 723 464 685 c
509 647 532 597 532 534 c
532 504 526 475 515 449 c
504 422 484 390 454 354 c
446 344 420 317 376 272 c
332 227 271 164 192 83 c
f
Q
} def
/one {
636 0 110 0 544 729 setcachedevice
q
124 83 m
285 83 l
285 639 l
110 604 l
110 694 l
284 729 l
383 729 l
383 83 l
544 83 l
544 0 l
124 0 l
124 83 l
f
Q
} def
/zero {
636 0 66 -13 570 742 setcachedevice
q
318 664 m
267 664 229 639 203 589 c
177 539 165 464 165 364 c
165 264 177 189 203 139 c
229 89 267 64 318 64 c
369 64 407 89 433 139 c
458 189 471 264 471 364 c
471 464 458 539 433 589 c
407 639 369 664 318 664 c
318 742 m
399 742 461 709 505 645 c
548 580 570 486 570 364 c
570 241 548 147 505 83 c
461 19 399 -13 318 -13 c
236 -13 173 19 130 83 c
87 147 66 241 66 364 c
66 486 87 580 130 645 c
173 709 236 742 318 742 c
f
Q
} def
/five {
636 0 77 -13 549 729 setcachedevice
q
108 729 m
495 729 l
495 646 l
198 646 l
198 467 l
212 472 227 476 241 478 c
255 480 270 482 284 482 c
365 482 429 459 477 415 c
525 370 549 310 549 234 c
549 155 524 94 475 51 c
426 8 357 -13 269 -13 c
238 -13 207 -10 175 -6 c
143 -1 111 6 77 17 c
77 116 l
106 100 136 88 168 80 c
199 72 232 69 267 69 c
323 69 368 83 401 113 c
433 143 450 183 450 234 c
450 284 433 324 401 354 c
368 384 323 399 267 399 c
241 399 214 396 188 390 c
162 384 135 375 108 363 c
108 729 l
f
Q
} def
end
currentdict end
/T3_14_0 exch definefont pop
%%EndResource
/F14_0 /T3_14_0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
0 0 504 216 re
W
q
2 J
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[1] SC
0 0 504 216 re
f
0 0 504 216 re
S
q
20.16 8.64 463.68 198.72 re
W
3 w
/DeviceRGB {} CS
[0 0 1] SC
58.4807 95.448 m
59.1552 100.635 l
60.5042 104.38 l
62.5278 107.971 l
65.2259 111.428 l
69.2731 115.305 l
73.3203 118.315 l
78.7165 121.501 l
85.4618 124.591 l
92.2071 126.979 l
100.301 129.152 l
109.745 130.943 l
119.188 132.087 l
129.981 132.738 l
142.122 132.76 l
154.264 132.126 l
167.754 130.737 l
181.245 128.688 l
194.735 126.013 l
208.226 122.715 l
221.717 118.749 l
233.858 114.486 l
243.302 110.516 l
250.047 107.073 l
255.443 103.541 l
258.141 101.122 l
260.165 98.2656 l
260.839 95.448 l
260.165 92.6305 l
259.49 91.4542 l
256.792 88.4687 l
252.745 85.4557 l
247.349 82.359 l
239.254 78.5877 l
228.462 74.4211 l
216.32 70.4747 l
202.83 66.7857 l
189.339 63.7389 l
175.849 61.3118 l
162.358 59.5212 l
148.868 58.4125 l
136.726 58.0596 l
124.584 58.4029 l
113.792 59.3911 l
104.349 60.8883 l
96.2543 62.7468 l
88.1599 65.2768 l
81.4146 68.0593 l
76.0184 70.8916 l
70.6222 74.5123 l
66.575 78.0459 l
63.8769 81.0716 l
61.1788 85.1639 l
59.8297 88.1341 l
59.1552 90.2615 l
58.4807 95.448 l
58.4807 95.448 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
3 w
/DeviceRGB {} CS
[0 0 1] SC
504 204.968 m
476.605 186.416 l
447.209 167.34 l
417.812 149.061 l
360.979 114.153 l
353.14 108.344 l
348.241 103.744 l
346.281 101.229 l
345.301 99.5051 l
344.321 95.448 l
345.301 91.391 l
347.261 88.3157 l
349.22 86.1049 l
353.14 82.5519 l
359.019 78.1066 l
368.818 71.5901 l
388.416 59.5738 l
437.41 29.7311 l
466.806 10.9329 l
482.485 0.562317 l
482.485 0.562317 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
20.16 118.91 m
483.84 118.91 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 8.64 m
221.214 207.36 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
74.2313 118.91 m
74.2313 121.89 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
147.722 118.91 m
147.722 121.89 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
294.705 118.91 m
294.705 121.89 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
368.196 118.91 m
368.196 121.89 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
441.687 118.91 m
441.687 121.89 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 118.91 m
221.214 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
74.2313 118.91 m
74.2313 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
147.722 118.91 m
147.722 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
412.291 118.91 m
412.291 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
368.196 118.91 m
368.196 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
426.989 118.91 m
426.989 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
324.101 118.91 m
324.101 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
206.515 118.91 m
206.515 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
191.817 118.91 m
191.817 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
397.593 118.91 m
397.593 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
294.705 118.91 m
294.705 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
133.024 118.91 m
133.024 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
353.498 118.91 m
353.498 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
44.8348 118.91 m
44.8348 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
441.687 118.91 m
441.687 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
177.119 118.91 m
177.119 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
250.61 118.91 m
250.61 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
471.084 118.91 m
471.084 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
265.308 118.91 m
265.308 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
309.403 118.91 m
309.403 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
30.1366 118.91 m
30.1366 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
88.9295 118.91 m
88.9295 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
382.894 118.91 m
382.894 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
338.8 118.91 m
338.8 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
59.533 118.91 m
59.533 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
280.007 118.91 m
280.007 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
235.912 118.91 m
235.912 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
118.326 118.91 m
118.326 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
103.628 118.91 m
103.628 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
456.386 118.91 m
456.386 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
162.421 118.91 m
162.421 119.655 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 25.0631 m
228.169 25.0631 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 48.5248 m
228.169 48.5248 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 71.9864 m
228.169 71.9864 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 95.448 m
228.169 95.448 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 142.371 m
228.169 142.371 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 165.833 m
228.169 165.833 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 189.295 m
228.169 189.295 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 118.91 m
222.952 118.91 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 25.0631 m
222.952 25.0631 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 198.679 m
222.952 198.679 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 48.5248 m
222.952 48.5248 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 29.7555 m
222.952 29.7555 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 137.679 m
222.952 137.679 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 184.602 m
222.952 184.602 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 151.756 m
222.952 151.756 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 100.14 m
222.952 100.14 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 170.525 m
222.952 170.525 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 81.3711 m
222.952 81.3711 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 67.2941 m
222.952 67.2941 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 142.371 m
222.952 142.371 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 90.7557 m
222.952 90.7557 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 109.525 m
222.952 109.525 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 161.141 m
222.952 161.141 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 39.1401 m
222.952 39.1401 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 104.833 m
222.952 104.833 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 193.987 m
222.952 193.987 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 10.9862 m
222.952 10.9862 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 179.91 m
222.952 179.91 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 147.064 m
222.952 147.064 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 132.987 m
222.952 132.987 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 76.6787 m
222.952 76.6787 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 15.6785 m
222.952 15.6785 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 20.3708 m
222.952 20.3708 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 34.4478 m
222.952 34.4478 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 71.9864 m
222.952 71.9864 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 165.833 m
222.952 165.833 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 62.6017 m
222.952 62.6017 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 175.218 m
222.952 175.218 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 156.448 m
222.952 156.448 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 95.448 m
222.952 95.448 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 128.294 m
222.952 128.294 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 123.602 m
222.952 123.602 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 53.2171 m
222.952 53.2171 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 203.372 m
222.952 203.372 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 86.0634 m
222.952 86.0634 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 57.9094 m
222.952 57.9094 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 189.295 m
222.952 189.295 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 114.217 m
222.952 114.217 l
S
Q
q
20.16 8.64 463.68 198.72 re
W
0.8 w
/DeviceGray {} CS
[0] SC
221.214 43.8324 m
222.952 43.8324 l
S
Q
0 J
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
[1 0 0 1 0 0] Tm
0 0 Td
69.95 108.632 Td
/F14_0 10 Tf
(-1) 9.97 Tj
[1 0 0 1 0 0] Tm
0 0 Td
138.644 108.507 Td
/F14_0 10 Tf
(-0.5) 19.51 Tj
[1 0 0 1 0 0] Tm
0 0 Td
287.517 108.507 Td
/F14_0 10 Tf
(0.5) 15.9 Tj
[1 0 0 1 0 0] Tm
0 0 Td
366.024 108.632 Td
/F14_0 10 Tf
(1) 6.36 Tj
[1 0 0 1 0 0] Tm
0 0 Td
434.719 108.632 Td
/F14_0 10 Tf
(1.5) 15.9 Tj
[1 0 0 1 0 0] Tm
0 0 Td
209.252 21.3522 Td
/F14_0 10 Tf
(-2) 9.97 Tj
[1 0 0 1 0 0] Tm
0 0 Td
199.58 44.9466 Td
/F14_0 10 Tf
(-1.5) 19.51 Tj
[1 0 0 1 0 0] Tm
0 0 Td
209.174 68.338 Td
/F14_0 10 Tf
(-1) 9.97 Tj
[1 0 0 1 0 0] Tm
0 0 Td
199.58 91.8074 Td
/F14_0 10 Tf
(-0.5) 19.51 Tj
[1 0 0 1 0 0] Tm
0 0 Td
203.361 138.731 Td
/F14_0 10 Tf
(0.5) 15.9 Tj
[1 0 0 1 0 0] Tm
0 0 Td
213.392 162.184 Td
/F14_0 10 Tf
(1) 6.36 Tj
[1 0 0 1 0 0] Tm
0 0 Td
203.799 185.716 Td
/F14_0 10 Tf
(1.5) 15.9 Tj
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font T3_14_0
%%EOF
