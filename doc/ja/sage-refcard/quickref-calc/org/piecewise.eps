%!PS-Adobe-3.0 EPSF-3.0
%%Creator: matplotlib 0.98.6svn, http://matplotlib.sf.net
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 576 144
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font T3_14_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-184 -236 1288 929] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 7 dict def
CharProcs begin
/period {
318 0 107 0 210 124 setcachedevice
q
107 0 103 124 re
f
Q
} def
/seven {
636 0 82 0 551 729 setcachedevice
q
82 729 m
551 729 l
551 687 l
286 0 l
183 0 l
432 646 l
82 646 l
82 729 l
f
Q
} def
/two {
636 0 73 0 536 742 setcachedevice
q
192 83 m
536 83 l
536 0 l
73 0 l
73 83 l
110 121 161 173 226 239 c
290 304 331 346 348 365 c
380 400 402 430 414 455 c
426 479 433 504 433 528 c
433 566 419 598 392 622 c
365 646 330 659 286 659 c
255 659 222 653 188 643 c
154 632 117 616 78 594 c
78 694 l
118 710 155 722 189 730 c
223 738 255 742 284 742 c
359 742 419 723 464 685 c
509 647 532 597 532 534 c
532 504 526 475 515 449 c
504 422 484 390 454 354 c
446 344 420 317 376 272 c
332 227 271 164 192 83 c
f
Q
} def
/three {
636 0 76 -13 556 742 setcachedevice
q
406 393 m
453 383 490 362 516 330 c
542 298 556 258 556 212 c
556 140 531 84 482 45 c
432 6 362 -13 271 -13 c
240 -13 208 -10 176 -4 c
144 1 110 10 76 22 c
76 117 l
103 101 133 89 166 81 c
198 73 232 69 268 69 c
330 69 377 81 409 105 c
441 129 458 165 458 212 c
458 254 443 288 413 312 c
383 336 341 349 287 349 c
202 349 l
202 430 l
291 430 l
339 430 376 439 402 459 c
428 478 441 506 441 543 c
441 580 427 609 401 629 c
374 649 336 659 287 659 c
260 659 231 656 200 650 c
169 644 135 635 98 623 c
98 711 l
135 721 170 729 203 734 c
235 739 266 742 296 742 c
370 742 429 725 473 691 c
517 657 539 611 539 553 c
539 513 527 479 504 451 c
481 423 448 403 406 393 c
f
Q
} def
/zero {
636 0 66 -13 570 742 setcachedevice
q
318 664 m
267 664 229 639 203 589 c
177 539 165 464 165 364 c
165 264 177 189 203 139 c
229 89 267 64 318 64 c
369 64 407 89 433 139 c
458 189 471 264 471 364 c
471 464 458 539 433 589 c
407 639 369 664 318 664 c
318 742 m
399 742 461 709 505 645 c
548 580 570 486 570 364 c
570 241 548 147 505 83 c
461 19 399 -13 318 -13 c
236 -13 173 19 130 83 c
87 147 66 241 66 364 c
66 486 87 580 130 645 c
173 709 236 742 318 742 c
f
Q
} def
/five {
636 0 77 -13 549 729 setcachedevice
q
108 729 m
495 729 l
495 646 l
198 646 l
198 467 l
212 472 227 476 241 478 c
255 480 270 482 284 482 c
365 482 429 459 477 415 c
525 370 549 310 549 234 c
549 155 524 94 475 51 c
426 8 357 -13 269 -13 c
238 -13 207 -10 175 -6 c
143 -1 111 6 77 17 c
77 116 l
106 100 136 88 168 80 c
199 72 232 69 267 69 c
323 69 368 83 401 113 c
433 143 450 183 450 234 c
450 284 433 324 401 354 c
368 384 323 399 267 399 c
241 399 214 396 188 390 c
162 384 135 375 108 363 c
108 729 l
f
Q
} def
/one {
636 0 110 0 544 729 setcachedevice
q
124 83 m
285 83 l
285 639 l
110 604 l
110 694 l
284 729 l
383 729 l
383 83 l
544 83 l
544 0 l
124 0 l
124 83 l
f
Q
} def
end
currentdict end
/T3_14_0 exch definefont pop
%%EndResource
/F14_0 /T3_14_0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
2 J
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[1] SC
0 0 576 144 re
f
0 0 576 144 re
S
q
23.04 5.76 529.92 132.48 re
W
2 w
/DeviceRGB {} CS
[0 0 1] SC
66.835 18.3654 m
66.9601 17.2021 l
67.1685 34.289 l
67.377 34.867 l
67.502 32.8107 l
67.7576 17.7799 l
67.8215 25.8849 l
68.0132 19.2344 l
68.0771 32.6514 l
68.2689 17.8502 l
68.3328 28.267 l
68.5245 19.8093 l
68.5245 19.8093 l
68.6523 23.4845 l
68.6523 23.4845 l
68.9079 22.598 l
68.9079 22.598 l
69.0996 23.1195 l
69.0996 23.1195 l
69.2274 34.4701 l
69.4191 25.1327 l
69.5469 16.9586 l
69.7198 23.7507 l
69.9001 34.7025 l
70.0803 30.4742 l
70.3206 17.5243 l
70.5009 18.9586 l
70.8614 34.4566 l
71.1017 32.2665 l
71.5222 17.6533 l
71.8064 18.6562 l
72.3947 34.171 l
72.8584 31.7602 l
73.6289 17.2855 l
74.1004 18.505 l
75.3219 34.4527 l
76.0839 33.1439 l
77.9923 17.3581 l
79.0166 17.8274 l
80.1829 23.8514 l
82.0554 33.0286 l
82.4602 34.0862 l
83.2537 35.1018 l
84.2806 34.6575 l
85.439 32.5408 l
90.638 20.1472 l
92.3546 17.9825 l
94.494 16.8017 l
96.5967 16.8719 l
98.8049 17.7947 l
102.457 20.2692 l
110.8366 26.347 l
116.3293 29.3619 l
122.0441 31.5951 l
128.0272 33.1531 l
135.4365 34.304 l
144.063 34.949 l
157.0959 35.1492 l
177.3614 34.6916 l
284.3887 31.435 l
284.3887 31.435 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
2 w
/DeviceRGB {} CS
[0 0 1] SC
285.2443 57.917 m
311.1528 63.6058 l
338.7099 70.3524 l
365.0217 77.4633 l
391.8221 85.3785 l
419.2263 94.1735 l
445.2179 103.1705 l
472.95 113.4734 l
500.2873 124.3406 l
504.7855 126.1964 l
504.7855 126.1964 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
23.04 25.933 m
552.96 25.933 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 5.76 m
65.7032 138.24 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
205.4674 25.933 m
205.4674 27.9202 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
345.2316 25.933 m
345.2316 27.9202 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
484.9959 25.933 m
484.9959 27.9202 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 25.933 m
65.7032 26.4298 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
205.4674 25.933 m
205.4674 26.4298 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
540.9016 25.933 m
540.9016 26.4298 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
401.1373 25.933 m
401.1373 26.4298 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
121.6089 25.933 m
121.6089 26.4298 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
177.5146 25.933 m
177.5146 26.4298 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
233.4203 25.933 m
233.4203 26.4298 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
512.9487 25.933 m
512.9487 26.4298 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
149.5617 25.933 m
149.5617 26.4298 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
93.656 25.933 m
93.656 26.4298 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
429.0902 25.933 m
429.0902 26.4298 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
317.2788 25.933 m
317.2788 26.4298 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
484.9959 25.933 m
484.9959 26.4298 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
457.043 25.933 m
457.043 26.4298 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
373.1845 25.933 m
373.1845 26.4298 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
261.3731 25.933 m
261.3731 26.4298 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
37.7504 25.933 m
37.7504 26.4298 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
289.326 25.933 m
289.326 26.4298 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
345.2316 25.933 m
345.2316 26.4298 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 48.9935 m
73.652 48.9935 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 72.054 m
73.652 72.054 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 95.1145 m
73.652 95.1145 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 118.175 m
73.652 118.175 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 12.0967 m
67.6904 12.0967 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 21.3209 m
67.6904 21.3209 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 44.3814 m
67.6904 44.3814 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 53.6056 m
67.6904 53.6056 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 62.8298 m
67.6904 62.8298 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 72.054 m
67.6904 72.054 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 30.5451 m
67.6904 30.5451 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 35.1572 m
67.6904 35.1572 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 99.7266 m
67.6904 99.7266 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 108.9508 m
67.6904 108.9508 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 118.175 m
67.6904 118.175 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 127.3992 m
67.6904 127.3992 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 136.6234 m
67.6904 136.6234 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 67.4419 m
67.6904 67.4419 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 132.0113 m
67.6904 132.0113 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 76.6661 m
67.6904 76.6661 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 25.933 m
67.6904 25.933 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 104.3387 m
67.6904 104.3387 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 113.5629 m
67.6904 113.5629 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 81.2782 m
67.6904 81.2782 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 90.5024 m
67.6904 90.5024 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 39.7693 m
67.6904 39.7693 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 48.9935 m
67.6904 48.9935 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 58.2177 m
67.6904 58.2177 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 122.7871 m
67.6904 122.7871 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 16.7088 m
67.6904 16.7088 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 85.8903 m
67.6904 85.8903 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 7.4846 m
67.6904 7.4846 l
S
Q
q
23.04 5.76 529.92 132.48 re
W
0.8 w
/DeviceGray {} CS
[0] SC
65.7032 95.1145 m
67.6904 95.1145 l
S
Q
0 J
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
[1 0 0 1 0 0] Tm
0 0 Td
203.2955 16.6489 Td
/F14_0 10 Tf
(1) 6.36 Tj
[1 0 0 1 0 0] Tm
0 0 Td
342.9191 16.5239 Td
/F14_0 10 Tf
(2) 6.36 Tj
[1 0 0 1 0 0] Tm
0 0 Td
482.5974 16.5239 Td
/F14_0 10 Tf
(3) 6.36 Tj
[1 0 0 1 0 0] Tm
0 0 Td
47.4319 45.3528 Td
/F14_0 10 Tf
(2.5) 15.9 Tj
[1 0 0 1 0 0] Tm
0 0 Td
57.0101 68.4758 Td
/F14_0 10 Tf
(5) 6.36 Tj
[1 0 0 1 0 0] Tm
0 0 Td
47.5257 91.5363 Td
/F14_0 10 Tf
(7.5) 15.9 Tj
[1 0 0 1 0 0] Tm
0 0 Td
50.7601 114.5343 Td
/F14_0 10 Tf
(10) 12.72 Tj
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font T3_14_0
%%EOF
